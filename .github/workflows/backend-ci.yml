name: Backend CI

on:
  push:
    branches: [main, develop]
    paths:
      - 'backend/**'
      - '.github/workflows/backend-ci.yml'
  pull_request:
    branches: [main, develop]
    paths:
      - 'backend/**'
      - '.github/workflows/backend-ci.yml'

jobs:
  test:
    name: Test Backend
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.12"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          version: "0.4.15"

      - name: Set up Python
        run: uv python install ${{ matrix.python-version }}

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/uv
          key: ${{ runner.os }}-uv-${{ hashFiles('backend/uv.lock') }}
          restore-keys: |
            ${{ runner.os }}-uv-

      - name: Install dependencies
        working-directory: backend
        run: uv sync --all-extras

      - name: Run all checks (format, lint, typecheck, test)
        working-directory: backend
        run: |
          uv run poe check

      - name: Check test coverage
        working-directory: backend
        run: |
          uv run poe test-cov
          # Ensure 80% minimum coverage
          uv run coverage report --fail-under=80

      - name: Upload coverage reports
        uses: codecov/codecov-action@v3
        with:
          file: ./backend/coverage.xml
          flags: backend
          name: backend-coverage

  docker-build:
    name: Test Docker Build
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build Docker image
        working-directory: backend
        run: |
          docker build -t cbt-backend-test:${{ github.sha }} .

      - name: Test Docker container
        run: |
          # Run container in background
          docker run -d --name test-backend \
            -p 8000:8000 \
            -e GOOGLE_API_KEY="test-key" \
            -e ENVIRONMENT="test" \
            cbt-backend-test:${{ github.sha }}
          
          # Wait for health check
          sleep 10
          
          # Test health endpoint
          curl -f http://localhost:8000/health || exit 1
          
          # Clean up
          docker stop test-backend
          docker rm test-backend