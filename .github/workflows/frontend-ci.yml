name: Frontend CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main, develop]

env:
  NODE_VERSION: '18.x'
  PNPM_VERSION: '10.11.0'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: Frontend Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          cd frontend
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('frontend/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        working-directory: frontend
        run: pnpm install --frozen-lockfile

      - name: Generate OpenAPI schema from backend
        working-directory: backend
        run: |
          # Install backend dependencies
          pip install uv
          uv sync --all-extras
          # Export OpenAPI schema
          uv run python -c "from src.main import app; import json; print(json.dumps(app.openapi(), indent=2))" > ../frontend/openapi.json
          # Verify the schema was generated
          if [ ! -f "../frontend/openapi.json" ]; then
            echo "Error: openapi.json was not generated"
            exit 1
          fi
          echo "OpenAPI schema generated successfully ($(wc -l < ../frontend/openapi.json) lines)"

      - name: Generate TypeScript API client
        working-directory: frontend
        run: |
          # Verify OpenAPI schema exists
          if [ ! -f "openapi.json" ]; then
            echo "Error: openapi.json not found"
            exit 1
          fi
          # Generate the API client from the schema
          pnpm run generate:api
          # Verify the generated files exist
          if [ ! -f "lib/api/generated/index.ts" ]; then
            echo "Error: API client was not generated"
            exit 1
          fi
          echo "TypeScript API client generated successfully"

      - name: Run ESLint
        working-directory: frontend
        run: pnpm lint

      - name: Run TypeScript check
        working-directory: frontend
        run: pnpm tsc --noEmit

      - name: Run tests
        working-directory: frontend
        run: pnpm test:ci
        env:
          CI: true

      - name: Verify generated files before build
        working-directory: frontend
        run: |
          # Verify all required files exist before building
          echo "Checking required files..."
          if [ ! -f "openapi.json" ]; then
            echo "Error: openapi.json missing"
            exit 1
          fi
          if [ ! -f "lib/api/generated/index.ts" ]; then
            echo "Error: Generated API client missing"
            exit 1
          fi
          if [ ! -f "lib/api/generated/sdk.gen.ts" ]; then
            echo "Error: Generated SDK missing"
            exit 1
          fi
          echo "All required files present, proceeding with build..."

      - name: Build application
        working-directory: frontend
        run: pnpm build

      - name: Upload coverage reports
        uses: codecov/codecov-action@v4
        if: always()
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: false
          flags: frontend
