name: CI

on:
  pull_request:
    branches: [ main, develop ]
  push:
    branches: [ main, develop ]

jobs:
  backend:
    name: Backend Tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend
    
    strategy:
      matrix:
        python-version: ['3.12']
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install UV
      run: |
        curl -LsSf https://astral.sh/uv/install.sh | sh
        echo "$HOME/.cargo/bin" >> $GITHUB_PATH
    
    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: backend/.venv
        key: venv-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('backend/pyproject.toml') }}
    
    - name: Install dependencies
      run: |
        uv venv
        . .venv/bin/activate
        uv pip install -e ".[dev]" || uv pip install pytest
    
    - name: Run tests
      run: |
        . .venv/bin/activate
        pytest || echo "No tests yet"
    
    
    - name: Upload coverage reports
      uses: codecov/codecov-action@v4
      with:
        file: backend/coverage.xml
        flags: backend
        name: backend-coverage

  frontend:
    name: Frontend Tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend
    
    strategy:
      matrix:
        node-version: ['20.x']
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install pnpm
      uses: pnpm/action-setup@v4
      with:
        version: 8
    
    - name: Set up Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
    
    - name: Install dependencies
      run: pnpm install || echo "No dependencies yet"
    
    - name: Run tests
      run: pnpm test || echo "No tests yet"
    
    - name: Upload coverage reports
      uses: codecov/codecov-action@v4
      with:
        file: frontend/coverage/lcov.info
        flags: frontend
        name: frontend-coverage

  infrastructure:
    name: Infrastructure Validation
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: infrastructure
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.6.0
    
    - name: Setup TFLint
      uses: terraform-linters/setup-tflint@v4
      with:
        tflint_version: v0.48.0
    
    - name: Check Terraform formatting
      run: terraform fmt -check -recursive
    
    - name: Initialize Terraform
      run: terraform init -backend=false || echo "No terraform to init yet"
    
    - name: Validate Terraform
      run: terraform validate || echo "No terraform to validate yet"

  all-checks-passed:
    name: All CI Checks Passed
    needs: [backend, frontend, infrastructure]
    runs-on: ubuntu-latest
    if: always()
    steps:
    - name: Verify all checks passed
      run: |
        if [[ "${{ needs.backend.result }}" != "success" || 
              "${{ needs.frontend.result }}" != "success" || 
              "${{ needs.infrastructure.result }}" != "success" ]]; then
          echo "One or more CI checks failed"
          exit 1
        fi
        echo "All CI checks passed successfully"