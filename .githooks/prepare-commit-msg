#!/bin/bash
# Git hook to help format commit messages with task IDs

# Only run in interactive mode
case "$2" in
  merge|squash|commit)
    exit 0
    ;;
esac

# Check if we're in a branch with a task ID pattern
current_branch=$(git symbolic-ref --short HEAD 2>/dev/null)

# Extract task ID from branch name if it follows pattern like "feature/INF-001-setup-gcp"
task_id=$(echo "$current_branch" | grep -oE '(INF|BE|FE|ALL)-[0-9]+')

# If we found a task ID in the branch name, prepend it to the commit message
if [ -n "$task_id" ]; then
    # Read the current commit message
    commit_msg=$(cat "$1")
    
    # Check if task ID is already in the message
    if ! echo "$commit_msg" | grep -q "\[$task_id\]"; then
        # Prepend the task ID
        echo "[$task_id] $commit_msg" > "$1"
    fi
fi