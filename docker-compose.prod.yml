# docker-compose.prod.yml
# Production-ready configuration with proper multi-stage builds

services:
  # Build backend first to generate OpenAPI schema
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      cache_from:
        - re-frame-backend:latest
    image: re-frame-backend:latest
    ports:
      - "8000:8000"
    environment:
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - ENVIRONMENT=production
      - LOG_LEVEL=info
      - PORT=8000
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Build frontend with OpenAPI schema from backend
  frontend:
    build:
      context: .
      dockerfile: ./frontend/Dockerfile.multistage
      args:
        - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL:-http://localhost:8000}
        - NEXT_PUBLIC_ENVIRONMENT=production
      cache_from:
        - re-frame-frontend:latest
    image: re-frame-frontend:latest
    ports:
      - "3000:8080"
    environment:
      - PORT=8080
      - NODE_ENV=production
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:8080/api/health', (res) => process.exit(res.statusCode === 200 ? 0 : 1))"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

networks:
  default:
    name: cbt-assistant-network