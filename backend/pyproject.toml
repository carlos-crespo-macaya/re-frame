[project]
name = "re-frame-backend"
version = "0.1.0"
description = "Backend API for re-frame.social - AI-assisted cognitive reframing for AvPD"
authors = [{name = "re-frame team"}]
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "fastapi>=0.109.0",
    "uvicorn[standard]>=0.27.0",
    "google-adk>=1.4.0",
    "google-generativeai>=0.3.2",
    "pydantic-settings>=2.1.0",
    "python-dotenv>=1.0.0",
    "firebase-admin>=6.4.0",
    "httpx>=0.26.0",
    "slowapi>=0.1.9",
    "python-multipart>=0.0.6",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.4",
    "pytest-asyncio>=0.23.0",
    "pytest-cov>=4.1.0",
    "black>=23.12.1",
    "ruff>=0.1.8",
    "mypy>=1.8.0",
    "httpx>=0.26.0",
    "poethepoet>=0.24.4",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["agents", "api", "config", "middleware"]

[tool.poe.tasks]
# Development
dev = "uvicorn main:app --reload --host 0.0.0.0 --port 8000"
install = "uv pip install -e '.[dev]'"
sync = "uv pip sync requirements.txt"

# Testing
test = "pytest"
test-watch = "pytest-watch"
test-cov = "pytest --cov=. --cov-report=html --cov-report=term-missing"
test-unit = "pytest tests/unit"
test-integration = "pytest tests/integration"

# Code Quality
lint = "ruff check ."
lint-fix = "ruff check . --fix"
format = "black ."
format-check = "black . --check"
type-check = "mypy ."

# Combined checks (what CI runs)
check = ["lint", "format-check", "type-check", "test-cov"]
fix = ["lint-fix", "format"]

# Utilities
clean = """
find . -type d -name __pycache__ -exec rm -rf {} + 2>/dev/null || true
find . -type f -name '*.pyc' -delete
rm -rf .pytest_cache .mypy_cache .ruff_cache htmlcov .coverage
"""

[tool.ruff]
line-length = 100
target-version = "py312"
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "N",   # pep8-naming
    "UP",  # pyupgrade
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "DTZ", # flake8-datetimez
    "T20", # flake8-print
    "RET", # flake8-return
    "SIM", # flake8-simplify
    "RUF", # ruff-specific rules
]
ignore = ["E501"]  # line too long (handled by black)

[tool.black]
line-length = 100
target-version = ['py312']

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
plugins = ["pydantic.mypy"]

[[tool.mypy.overrides]]
module = [
    "firebase_admin.*",
    "google.adk.*",
    "slowapi.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_functions = "test_*"
asyncio_mode = "auto"
addopts = "--cov=. --cov-report=html --cov-report=term-missing"

[tool.coverage.run]
omit = [
    "tests/*",
    "*/site-packages/*",
    "*/__pycache__/*",
]
